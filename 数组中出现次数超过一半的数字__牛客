/*
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。
由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。
如果不存在则输出0。
*/
#include<iostream>
using namespace std;
#include<vector>
int MoreThanHalfNum_Solution(vector<int> numbers)
{
	int size = numbers.size();
	int a = numbers[0];
	int count = 1;
	for (int i = 0; i < size; ++i)
	{
		if (a == numbers[i])
		{
			count++;
		}
		else
		{
			count--;
			if (count == 0)
			{
				a = numbers[i];
				count = 1;
			}
		}
	}
	int num = 0;//判断是否大于一半；
	for (int i = 0; i < size; ++i)
	{
		if (a == numbers[i])
			num++;
	}
	if (num > (size / 2))
		return a;

	return 0;
}
int main()
{
	//int a[] = { 1,2,3,2,2,2,5,4,2 };
	vector<int> v;
	v.push_back(1);
	v.push_back(2);
	v.push_back(3);
	v.push_back(2);
	v.push_back(2);
	v.push_back(2);
	v.push_back(5);
	v.push_back(4);
	v.push_back(2);
	int c = MoreThanHalfNum_Solution(v);
	cout << c;
	return 0;
}
