#include<iostream>
using namespace std;
typedef struct Node
{
	int val;
	struct Node* next;
}Node;

Node* mergeOrderedList(Node* head1, Node* head2)
{
	if (head1 == nullptr)
		return head2;
	if (head2 == nullptr)
		return head1;

	Node* cur1 = head1;
	Node* cur2 = head2;

	Node* rHead = nullptr;		// 新链表的第一个结点
	Node* last = nullptr;		// 新链表的最后一个结点
	// 保证两个链表中都还有结点，才比较谁大谁小
	while (cur1 != nullptr && cur2 != nullptr)
	{
		if (cur1->val <= cur2->val)
		{
			Node* next = cur1->next;
			cur1->next = nullptr;
			if (rHead == nullptr)
			{
				rHead = cur1;
			}
			else {
				last->next = cur1;
			}
			last = cur1;
			cur1 = next;
		}
		else
		{
			Node* next = cur2->next;
			cur2->next = nullptr;
			if (rHead == nullptr)
			{
				rHead = cur2;
			}
			else {
				last->next = cur2;
			}
			last = cur2;
			cur2 = next;
		}
	}
	if (cur1 != nullptr) 
	{
		last->next = cur1;
	}
	else 
	{
		last->next = cur2;
	}
	return rHead;
}
