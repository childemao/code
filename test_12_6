#include<iostream>
using namespace std;
class Date
{
public:
	Date(int year = 1900, int month = 1, int day = 1)
	{
		_year = year;
		_month = month;
		_day = day;
		cout << "Date(int,int,int):" << this << endl;
	}

	// 用已经存在的对象拷贝构造新对象时，由编译器自动进行调用
	Date(const Date& d)
	{
		_year = d._year;
		_month = d._month;
		_day = d._day;

		cout << "Date(Date&):" << this << endl;
	}

	// a = b = c;
	Date& operator=(const Date& d)
	{
		//cout << this << " = " << &d << endl;
		if (this != &d)
		{
			_year = d._year;
			_month = d._month;
			_day = d._day;
		}

		return *this;
	}

	// 10 + 20
	Date operator+(int days)
	{
		Date temp(*this);
		temp._day += days;
		return temp;
	}

	bool operator==(const Date& d)
	{
		return _year == d._year &&
			_month == d._month &&
			_day == d._day;
	}

	bool operator!=(const Date& d)
	{
		return !(*this == d);
	}

	void PrintDate()
	{
		cout << _year << "-" << _month << "-" << _day << endl;
	}

private:
	int _year;
	int _month;
	int _day;
};

int main()
{
	int a = 10;
	int b = 20;
	int c = 30;

	//a = b;
	a = b = c;

	Date d1(2019, 7, 26);
	Date d2;
	Date d3;

	//d2 = d1;

	//d1 = d1;

	d3 = d2 = d1;
	d3.operator=(d2.operator=(d1));

	Date& d4 = d1;
	d4 = d1;
	return 0;
}
